#!/bin/bash
IPS=`ip -4 -o a `
POD_IP=`printf "$IPS" | awk '/eth/ { sub ("/..", "", $4); print $4 }' | tail -1`
export MON_IP=$POD_IP CEPH_PUBLIC_NETWORK=172.17.0.0/24 KV_TYPE=etcd KV_IP=172.17.0.1 KV_PORT=4001

## fix my_init
sed -i 's/runsvdir/\/usr\/bin\/runsvdir/g' /sbin/my_init
sed -i 's/sv down/\/usr\/bin\/sv down/g' /sbin/my_init
sed -i 's/sv up/\/usr\/bin\/sv up/g' /sbin/my_init

## test my_init deps
/sbin/my_init &> /dev/null &

echo "populating keystore"
/entrypoint.sh populate_kvstore

echo "launching mon"
/entrypoint.sh mon &> /dev/null &
sleep 5

echo "launching osd"
export OSD_TYPE="directory"
/entrypoint.sh osd &> /dev/null &
sleep 5

#echo "restarting osd and mon"
#runsvdir -P /etc/service/ &>/dev/null &
#/entrypoint.sh mon &> /dev/null &
#sleep 10

echo "launching mds"
export CEPHFS_CREATE=1
/entrypoint.sh mds &> /dev/null &
sleep 5

echo "reaching health ok"
ceph osd pool set rbd size 1
ceph osd pool set rbd min_size 1
ceph osd pool set cephfs_data size 1
ceph osd pool set cephfs_data min_size 1
ceph osd pool set cephfs_metadata size 1
ceph osd pool set cephfs_metadata min_size 1
sleep 5

echo "launching rgw"
/entrypoint.sh rgw &> /dev/null &
sleep 5

echo "launching rest api"
/entrypoint.sh restapi &> /dev/null &
sleep 5

echo "rbd tests"
## rbd
rbd create foo --size 1 &> /dev/null &
rbd ls &> /dev/null &
sudo rbd map foo --name client.admin &> /dev/null &

echo "including package files"
include=( "/usr/bin/ceph*" \
          "/usr/bin/rbd*" \
          "/usr/bin/rados*" \
          "/usr/bin/uu*" \
          "/usr/sbin/uuidd" \
          "/usr/local/bin/*" \
          "/bin/bash" \
          "/bin/cat" \
          "/bin/grep" \
          "/bin/ls" \
          "/sbin/my_init" \
          "/usr/bin/uuidgen" \
          "/usr/bin/awk" \
          "/usr/bin/crushtool" \
          "/bin/mount" \
          "/sbin/mkfs" \
          "/sbin/iptables" \
          "/usr/bin/print" \
          "/usr/bin/runsv*" \
          "/sbin/run*" \
          "/usr/lib/librbd*" \
          "/usr/lib/python2.7/dist-packages/rbd*" \
          )

echo "touching manual list"
for n in ${!include[*]}
do
found=`find ${include[n]}`
echo $found > /tmp/found
rm ./incl* &>/dev/null
split -l 1 /tmp/found incl
for l in `find ./incl*`; do
foundldd=`ldd \`cat $l\` 2>/dev/null`
foundawk=`echo "$foundldd" | awk '{print $3}'`
foundgrep=`echo "$foundawk" | grep '/'`
foundsorted=`echo "$foundgrep" | sort -u`
touch `echo "$foundsorted"` ${include[n]}
done
echo ${include[n]}
sleep 0.5
done

echo "touching package list"
rm ./spl* &>/dev/null
echo "before split"
split -l 1000 /host/list.txt spl
echo "after split"
for e in `find ./spl*`;
do
echo "before filter"
filter=`file \`cat $e \` | grep -v "directory" | grep -oP "^[^\:]*"`
echo "after filter"
echo "$filter" > /tmp/found
rm ./lif* &>/dev/null
echo "before large split"
split -l 1 /tmp/found lif
echo "after large split"
for l in `find ./lif*`;
do
sleep 0.04
echo "ldd"
found=`ldd \`cat $l\` 2>/dev/null`
sleep 0.04
echo "awk"
foundawk=`echo "$found" | awk '{print $3}' 2>/dev/null`
sleep 0.04
echo "grep"
foundgrep=`echo "$foundawk" | grep '/' 2>/dev/null`
sleep 0.04
echo "sorted"
foundsorted=`echo "$foundgrep" | sort -u 2>/dev/null`
sleep 0.04
echo "touch"
touch `echo "$foundsorted"` 2>/dev/null
sleep 0.04
done
echo $e
done

sleep 5

echo "iptables tests"
echo "before hosts"
# run a bunch of stuff to pickup arts for iptables script
echo $POD_IP localhost >> /etc/hosts
MON_IP=1.2.0.1
POD_IP=1.2.0.2
echo "before ifconfig"
ifconfig lo:9 9.9.9.9 netmask 255.255.0.0 up
echo "before iptables"
iptables -t nat -N ceph
iptables -t nat -A OUTPUT -s 1.2.0.0/24 -d 1.2.0.0/24 -j ceph
iptables -t nat -A ceph -d 1.1.1.1 -j DNAT --to-destination 2.2.2.2
iptables -t nat -A PREROUTING -d $POD_IP -j DNAT --to-destination $MON_IP
iptables -t nat -A POSTROUTING -s $MON_IP -j SNAT --to-source $POD_IP
iptables -t nat -A OUTPUT -s $CEPH_PUBLIC_NETWORK -d $CEPH_PUBLIC_NETWORK -j ceph
echo "after iptables"

echo "misc tests"
echo '1234' | cut -d',' -f1
